{
    "openapi": "3.0.1",
    "info": {
        "version": "1.0.0",
        "title": "Wallet online API. powered by CoStyle Studio",
        "description": "A minimal and easy to follow example of what you need to create a CRUD style API in NodeJs",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "/",
            "description": "Local Dev, or from Heroku"
        }
    ],
    "tags": [
        {
            "name": "Transactions",
            "description": "API for transaction operations"
        }
    ],
    "paths": {
        "/api/users/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User registration",
                "parameters": [],
                "requestBody": {
                    "description": "Registration object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User has been created!",
                        "content": {
                            "aplication/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "content": {}
                    },
                    "409": {
                        "description": "This email already exists!",
                        "content": {}
                    }
                }
            }
        },
        "/api/users/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User authentication",
                "parameters": [],
                "requestBody": {
                    "description": "Login object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Invalid credentials!",
                        "content": {}
                    }
                }
            }
        },
        "/api/users/current": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Getting user's data",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's data has been sent!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User unathorization",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User logged out. No content."
                    }
                }
            }
        },
        "/api/transactions": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Add transaction operation",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "Add transaction object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddTransactionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transaction has been created!",
                        "content": {
                            "aplication/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing required fields!",
                        "content": {}
                    }
                }
            },
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get all transaction of a particular user operation",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfull transactions data response!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAllTransactionsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/transactions/statistic": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "get transactions total values and statistic",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction statistic has been sent!",
                        "content": {
                            "aplication/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionStatisticResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AddTransactionRequest": {
                "type": "object",
                "required": [
                    "category",
                    "time",
                    "amount",
                    "sort"
                ],
                "properties": {
                    "category": {
                        "type": "string",
                        "description": "Transaction category",
                        "example": "Дом"
                    },
                    "time": {
                        "type": "string",
                        "description": "Timestamp of a made transaction",
                        "example": "10.07.21"
                    },
                    "amount": {
                        "type": "integer",
                        "description": "Money amount in transaction",
                        "example": 10400
                    },
                    "sort": {
                        "type": "string",
                        "description": "Sort of a transaction",
                        "example": "Доход"
                    },
                    "commentary": {
                        "type": "string",
                        "description": "Transaction commentary",
                        "example": "Месячная плата за аренду жилья"
                    }
                }
            },
            "AddTransactionResponse": {
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string",
                        "description": "Transaction category",
                        "example": "Дом"
                    },
                    "color": {
                        "type": "string",
                        "description": "Category mark color",
                        "example": "rgb(255,255,255)"

                    },
                    "time": {
                        "type": "string",
                        "description": "Timestamp of a made transaction",
                        "example": "10.07.21"
                    },
                    "amount": {
                        "type": "integer",
                        "description": "Money amount in transaction",
                        "example": 10400
                    },
                    "sort": {
                        "type": "string",
                        "description": "Sort of a transaction",
                        "example": "Доход"
                    },
                    "commentary": {
                        "type": "string",
                        "description": "Transaction commentary",
                        "example": "Месячная плата за аренду жилья"
                    },
                    "owner": {
                        "type": "string",
                        "description": "User id",
                        "example": "5430e2da7f863dg53cf025de7"
                    },
                    "id": {
                        "type": "string",
                        "description": "Transaction id made by DB",
                        "example": "60e2da7f8630053cf025de7a"
                    }
                }
            },
            "RegistrationRequest": {
                "type": "object",
                "required": [
                    "email",
                    "password",
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Grisha"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email",
                        "example": "roman11@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "qweqw123"
                    }
                }
            },
            "RegistrationResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Grisha"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email",
                        "example": "roman11@gmail.com"
                    },
                    "id": {
                        "type": "string",
                        "description": "User's id",
                        "example": "12defef44vfvfg4t3tf4"
                    },
                    "token": {
                        "type": "string",
                        "description": "User's token",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZTJkNzlkYjBlNTVhM2I3Y2UzMjlhMSIsImlhdCI6MTYyNTU1NTY5OCwiZXhwIjoxNjI1NTYyODk4fQ.lPTy3jIUye4GxAeGGOr6uDm35MfrH_AjmFg2sAH7rFk"
                    }
                }
            },
            "LoginResponse": {
                "type": "object",
                "example": {
                    "status": "Success",
                    "code": 200,
                    "payload": {
                        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZTJkNzlkYjBlNTVhM2I3Y2UzMjlhMSIsImlhdCI6MTYyNTU1NTY5OCwiZXhwIjoxNjI1NTYyODk4fQ.lPTy3jIUye4GxAeGGOr6uDm35MfrH_AjmFg2sAH7rFk"
                    }
                }
            },
            "LoginRequest": {
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email",
                        "example": "roman11@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "qweqw123"
                    }
                }
            },
            "CurrentResponse": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email",
                        "example": "roman11@gmail.com"
                    },
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "GachiMuchi"
                    }
                }
            },
            "GetTransactionStatisticResponse": {
                "type": "object",
                "properties": {
                    "incomeValue": {
                        "type": "integer",
                        "description": "total of income transactions",
                        "example": 12030
                    },
                    "consumptionValue": {
                        "type": "integer",
                        "description": "total of consumption transactions",
                        "example": 1600
                    },
                    "categoriesSummary": {
                        "type": "object",
                        "description": "Summary income of particular category",
                        "example": {
                            "Другое": 239976,
                            "Дом": 10400
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
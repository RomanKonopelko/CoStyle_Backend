{
    "openapi": "3.0.1",
    "info": {
        "version": "1.0.0",
        "title": "Wallet online API. powered by CoStyle Studio",
        "description": "A minimal and easy to follow example of what you need to create a CRUD style API in NodeJs",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "/",
            "description": "Local Dev, or from Heroku"
        },
        {
            "url": "/api/",
            "description": "With docker-compose and nginx proxy"
        }
    ],
    "tags": [
        {
            "name": "Transactions",
            "description": "API for transaction operations"
        }
    ],
    "paths": {
        "/user/register":{
"post":{
    "tags": ["Auth"],
    "summary": "User registration",
    "parameters": [],
    "requestBody":{
        "description" :"Registration object",
        "required": true,
        "content": {
            "application/json":{
                "schema":{
                    "$ref":"#/components/schemas/RegistrationRequest"
                }
            }
        }
    },
  "responses": {
      "201":{
          "description": "User has been created!",
          "content": {
              "aplication/json":{
                  "schema":{
                      "$ref": "#/components/schemas/RegistrationResponse"
                  }
              }
          }
      },
      "400":{
          "description": "Invalid request body",
          "content": {}
      },
      "409":{
          "description": "This email already exists!",
          "content": {}
      }
  }

}
        },
        "/user/login":{
"post":{
      "tags": ["Auth"],
    "summary": "User authentication",
    "parameters": [],
    "security":[{"Bearer": []}],
    "requestBody":{
        "description" :"Registration object",
        "required": true,
        "content": {
            "application/json":{
                "schema":{
                    "$ref":"#/components/schemas/RegistrationRequest"
                }
            }
        }
    },
    "responses": {
"200":{
    "description": "User logged in successfully!",
    "content": {
         "aplication/json":{
                  "schema":{
                      "$ref": "#/components/schemas/RegistrationResponse"
                  }
              }
    }
},
"409":{
    "description": "Invalid credentials!",
    "content": {}
}
    }
}
        }
    },
    "components": {
        "schemas": {
            "RegistrationRequest":{
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                    "email":{
                        "type":"string",
                        "description": "User's email",
                        "format": "email",
                        "example": "dungeonMaster@mail.com"
                    },
                    "password":{
                        "type": "string",
                        "description": "User's password",
                        "example": "qweqwe123123"
                    }
                }
            },
            "RegistrationResponse":{
                "type":"object",
                "properties": {
                         "email":{
                        "type":"string",
                        "description": "User's email",
                        "format": "email",
                        "example": "dungeonMaster@mail.com"
                    },
                  "id":{
                      "type": "string",
                      "description": "User's id",
                      "example":"12defef44vfvfg4t3tf4"
                  }
                }
            }
        },
        "securitySchemes": {
            "Bearer":{
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}